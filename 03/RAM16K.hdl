// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux4Way(in=load,sel=address[12..13],a=loader7,b=loader8,c=loader9,d=loader10);
    RAM4K(in=in,load=loader7,address=address[0..11],out=outer5);
    RAM4K(in=in,load=loader8,address=address[0..11],out=outer6);
    RAM4K(in=in,load=loader9,address=address[0..11],out=outer7);
    RAM4K(in=in,load=loader10,address=address[0..11],out=outer8);
    Mux4Way16(a=outer5,b=outer6,c=outer7,d=outer8,sel=address[12..13],out=out);
}
